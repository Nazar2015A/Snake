{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\nexport function useInterval(callback, delay) {\n  _s();\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\nexport function reverseLinkedList(head) {\n  let previousNode = null;\n  let currentNode = head;\n  while (currentNode !== null) {\n    const nextNode = currentNode.next;\n    currentNode.next = previousNode;\n    previousNode = currentNode;\n    currentNode = nextNode;\n  }\n  return previousNode;\n}","map":{"version":3,"names":["useEffect","useRef","randomInt","min","max","Math","floor","random","useInterval","callback","delay","_s","savedCallback","current","tick","id","setInterval","clearInterval","reverseLinkedList","head","previousNode","currentNode","nextNode","next"],"sources":["C:/Users/user/Desktop/project/snake/front-end/src/utils/utils.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nexport function randomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nexport function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n  \r\n  export function reverseLinkedList(head) {\r\n    let previousNode = null;\r\n    let currentNode = head;\r\n    while (currentNode !== null) {\r\n      const nextNode = currentNode.next;\r\n      currentNode.next = previousNode;\r\n      previousNode = currentNode;\r\n      currentNode = nextNode;\r\n    }\r\n    return previousNode;\r\n  }"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,OAAO,SAASC,SAASA,CAACC,GAAG,EAAEC,GAAG,EAAE;EAChC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC5D;AAEA,OAAO,SAASK,WAAWA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAMC,aAAa,GAAGX,MAAM,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACdY,aAAa,CAACC,OAAO,GAAGJ,QAAQ;EAClC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAT,SAAS,CAAC,MAAM;IACd,SAASc,IAAIA,CAAA,EAAG;MACdF,aAAa,CAACC,OAAO,CAAC,CAAC;IACzB;IACA,IAAIH,KAAK,KAAK,IAAI,EAAE;MAClB,IAAIK,EAAE,GAAGC,WAAW,CAACF,IAAI,EAAEJ,KAAK,CAAC;MACjC,OAAO,MAAMO,aAAa,CAACF,EAAE,CAAC;IAChC;EACF,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;AACb;AAACC,EAAA,CAlBaH,WAAW;AAoBzB,OAAO,SAASU,iBAAiBA,CAACC,IAAI,EAAE;EACtC,IAAIC,YAAY,GAAG,IAAI;EACvB,IAAIC,WAAW,GAAGF,IAAI;EACtB,OAAOE,WAAW,KAAK,IAAI,EAAE;IAC3B,MAAMC,QAAQ,GAAGD,WAAW,CAACE,IAAI;IACjCF,WAAW,CAACE,IAAI,GAAGH,YAAY;IAC/BA,YAAY,GAAGC,WAAW;IAC1BA,WAAW,GAAGC,QAAQ;EACxB;EACA,OAAOF,YAAY;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}